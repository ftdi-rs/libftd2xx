on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  schedule:
    - cron: "41 3 * * *"

name: CI

jobs:

  linux_build:
    name: Linux Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - "aarch64-unknown-linux-gnu"
          - "aarch64-unknown-linux-musl"
          - "x86_64-unknown-linux-gnu"
          - "x86_64-unknown-linux-musl"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - run: RUSTFLAGS="-D warnings" cargo build --target ${{ matrix.target }}

  windows_build:
    name: Windows Build
    runs-on: windows-latest
    env:
      RUSTFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
      - run: cargo build

  linux_test:
    name: Linux Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["x86_64-unknown-linux-musl", "x86_64-unknown-linux-gnu"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - run: cargo test --all-features --target ${{ matrix.target }}

  windows_test:
    name: Windows Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
      - run: cargo test

  clippy_check:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  docs:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: RUSTDOCFLAGS="-D warnings" cargo doc

  format_check:
    name: Rust Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - run: cargo fmt -- --check

  release:
    name: crates.io release
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - clippy_check
      - docs
      - format_check
      - linux_build
      - linux_test
      - windows_build
      - windows_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo publish --token ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
